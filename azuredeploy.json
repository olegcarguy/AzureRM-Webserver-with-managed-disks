{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "StorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "server01Name": {
      "type": "string",
      "minLength": 1
    },
    "server01AdminUserName": {
      "type": "string",
      "minLength": 1
    },
    "server01AdminPassword": {
      "type": "securestring"
    },
    "server01WindowsOSVersion": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ]
    },
    "PublicNSGName": {
      "type": "string",
      "minLength": 1
    },
    "OMSWorkspaceID": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "2da5ec9d-3983-458e-98dd-4eb0e489b145"
    },
    "OMSWorkspaceKey": {
      "type": "securestring",
      "minLength": 1,
      "defaultValue": "DlAJSy4yLcjZl67PAH/hKo49T9DMxlL6z+/C2oXmzn+3f57cShKBB+xwrsdmHKneSNjUwazMeO119A5Z/FtRMg=="
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      }
    }
  },
  "variables": {
    "StorageAccountName": "[concat(tolower(resourceGroup().name),'storage')]",
    "vNet01Prefix": "10.0.0.0/16",
    "vNet01Subnet1Name": "Public",
    "vNet01Subnet1Prefix": "10.0.0.0/24",
    "vNet01Subnet2Name": "Private",
    "vNet01Subnet2Prefix": "10.0.1.0/24",
    "server01ImagePublisher": "MicrosoftWindowsServer",
    "server01ImageOffer": "WindowsServer",
    "server01OSDiskName": "[concat(parameters('server01Name'),'OSDisk')]",
    "server01VmSize": "Standard_D2_v2",
    "server01VnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'vNet01')]",
    "server01SubnetRef": "[concat(variables('server01VnetID'), '/subnets/', variables('vNet01Subnet1Name'))]",
    "server01StorageAccountContainerName": "vhds",
    "server01NicName": "[concat(parameters('server01Name'), 'NetworkInterface')]",
    "publicIP01Name": "[concat(parameters('server01Name'),'publicIP01')]",
    "uniqueDnsLabel": "[concat(parameters('server01Name'),'-', uniquestring(resourceGroup().id))]",
    "DSCExtensionArchiveFolder": "DSC",
    "DSCExtensionArchiveFileName": "DSCExtension.zip"
  },
  "resources": [
    {
      "name": "[variables('StorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('StorageAccountType')]",
        "tier": "standard"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "StorageAccount"
      },
      "kind": "Storage",
      "properties": {
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "blob": {
              "enabled": true
            }
          }
        }
      }
    },
    {
      "name": "vNet01",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "vNet01"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNet01Prefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vNet01Subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('vNet01Subnet1Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('PublicNSGName'))]"
              }
            }
          },
          {
            "name": "[variables('vNet01Subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('vNet01Subnet2Prefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('server01NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'vNet01')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP01Name'))]"
      ],
      "tags": {
        "displayName": "server01Nic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('server01SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP01Name'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('server01Name')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('server01NicName'))]"
      ],
      "tags": {
        "displayName": "server01"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('server01VmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('server01Name')]",
          "adminUsername": "[parameters('server01AdminUsername')]",
          "adminPassword": "[parameters('server01AdminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('server01ImagePublisher')]",
            "offer": "[variables('server01ImageOffer')]",
            "sku": "[parameters('server01WindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[variables('server01OSDiskName')]",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('server01NicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('https', '://', variables('StorageAccountname'), '.blob.core.windows.net', '/')]"
          }
        }
      },
      "resources": [
        {
          "name": "Microsoft.Powershell.DSC",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('server01Name'))]"
          ],
          "tags": {
            "displayName": "DSCExtension"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[concat(parameters('_artifactsLocation'), '/', variables('DSCExtensionArchiveFolder'), '/', variables('DSCExtensionArchiveFileName'))]",
                "script": "DSCExtension.ps1",
                "function": "Main"
              },
              "configurationArguments": {
                "nodeName": "[parameters('server01Name')]"
              }
            },
            "protectedSettings": {
              "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]"
            }
          }
        }
      ]
    },
    {
      "name": "[variables('publicIP01Name')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "publicIP01"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('uniqueDnsLabel')]"
        }
      }
    },
    {
      "name": "[parameters('publicNSGName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "tags": {
        "displayName": "PublicNSG"
      },
      "properties": {
        "securityRules": [
          {
            "name": "rdp-allow",
            "properties": {
              "description": "Allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          },
          {
            "name": "http-allow",
            "properties": {
              "description": "Allow HTTP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 210,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('server01Name'), '/VMAccessAgent')]",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "scale": null,
      "tags": {
        "displayName": "VMAccessExtension"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "VMAccessAgent",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "UserName": "[parameters('server01AdminUserName')]"
        },
        "protectedSettings": {}
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('server01Name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('server01Name'), '/OMSExtension')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "OMSExtension"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('server01Name'))]"
      ],
      "properties": {
        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
        "type": "MicrosoftMonitoringAgent",
        "typeHandlerVersion": "1.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "workspaceId": "[parameters('OMSWorkspaceID')]"
        },
        "protectedSettings": {
          "workspaceKey": "[parameters('OMSWorkspaceKey')]"
        }
      }
    }
  ],

  "outputs": {
    "RDPCommand": {

      "value": "[concat('mstsc.exe /v ',variables('uniqueDnsLabel'), '.', resourceGroup().location, '.cloudapp.azure.com')]",
      "type": "string"
    },

    "website URL": {
      "value": "[concat('http://',variables('uniqueDnsLabel'), '.', resourceGroup().location, '.cloudapp.azure.com')]",
      "type": "string"
    }

  }
}
   
